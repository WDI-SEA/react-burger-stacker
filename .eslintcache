[{"/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/index.js":"1","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/App.js":"2","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/reportWebVitals.js":"3","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/Ingredients.js":"4","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/IngredientList.js":"5","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/BurgerPane.js":"6","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/BurgerStack.js":"7","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/ClearBurger.js":"8"},{"size":500,"mtime":1612224659658,"results":"9","hashOfConfig":"10"},{"size":1453,"mtime":1612331123574,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612224659698,"results":"12","hashOfConfig":"10"},{"size":982,"mtime":1612330880128,"results":"13","hashOfConfig":"10"},{"size":375,"mtime":1612330477626,"results":"14","hashOfConfig":"10"},{"size":403,"mtime":1612331086409,"results":"15","hashOfConfig":"10"},{"size":324,"mtime":1612325425608,"results":"16","hashOfConfig":"10"},{"size":257,"mtime":1612325419428,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"n7f1dl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/index.js",[],["38","39"],"/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/App.js",["40"],"import React, { Component } from 'react'\nimport './App.css';\nimport Ingredients from './Ingredients'\nimport IngredientList from './IngredientList'\nimport BurgerPane from './BurgerPane'\n\n\nconst ingredients = \n[\n  {name: 'Kaiser Bun', color: 'saddlebrown'},\n  {name: 'Sesame Bun', color: 'sandybrown'},\n  {name: 'Gluten Free Bun', color: 'peru'},\n  {name: 'Lettuce Wrap', color: 'olivedrab'},\n  {name: 'Beef Patty', color: '#3F250B'},\n  {name: 'Soy Patty', color: '#3F250B'},\n  {name: 'Tide Pod', color: '#3336FF'},\n  {name: 'Black Bean Patty', color: '#3F250B'},\n  {name: 'Chicken Patty', color: 'burlywood'},\n  {name: 'Lettuce', color: 'lawngreen'},\n  {name: 'Tomato', color: 'tomato'},\n  {name: 'Bacon', color: 'maroon'},\n  {name: 'Onion', color: 'lightyellow'}\n]\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n        burger: [],\n        newIngredient:''\n    }\n    this.addIngredient=this.addIngredient.bind(this)\n}\n\naddIngredient(newIng){\n  let temp = this.state.burger\n  console.log(this.state)\n  temp.push(newIng)\n  this.setState({burger: temp})\n}\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          {ingredients.map((ingredient) => (\n            <IngredientList ingredient={ingredient} addIngredient={this.addIngredient} />\n          ))}\n        </div>\n        <div>\n          <BurgerPane burger={this.state.burger} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/reportWebVitals.js",[],"/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/Ingredients.js",["41"],"import React, { Component } from 'react';\nimport BurgerStack from './BurgerStack';\n\nclass Ingredients extends Component {\n    // constructor(props){\n    //     super(props)\n        // this.state = {\n        //     ingToDisplay: props.ingredients,\n        //     burger: [],\n        //     newIngredient:''\n        // }\n        // this.handleClick = this.handleClick.bind()\n    // }\n    // handleClick(e){\n    //     console.log(e.target.value)\n    //     let ingredient = e.target.value\n    //     this.setState((prevState, props) => {\n    //         burger.push(ingredient)\n    //     })\n    // }\n    render() {\n        return (\n            <div className='ingredients'>\n                <div>\n                    <button value={this.props.ingredients} onClick={(e) => this.props.addIngredient(this.props.ingredients)}>\n                    {this.props.ingredients}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Ingredients","/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/IngredientList.js",[],"/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/BurgerPane.js",[],"/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/BurgerStack.js",[],"/Users/AustinTipograph/Desktop/GA/SEIRedDevs/unit3/react-burger-stacker/src/ClearBurger.js",[],["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":19},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Ingredients' is defined but never used.","Identifier","unusedVar","'BurgerStack' is defined but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]